{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["TodoList","todos","setUserId","setTitle","setStatus","changeStatus","className","name","onChange","event","target","value","type","map","todo","key","id","classNames","TodoList__item","completed","readOnly","checked","title","onClick","userId","CurrentUser","state","user","this","props","getUser","then","setState","prevProps","email","phone","clearUser","React","Component","TODOS_API","fetch","response","json","result","data","App","selectedUserId","status","filter","visibleTodos","todosByTitle","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84105ab7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  setUserId,\n  setTitle,\n  setStatus,\n  changeStatus,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <select\n      name=\"select\"\n      onChange={(event) => {\n        setStatus(event.target.value);\n      }}\n    >\n      <option value=\"All\">\n        All\n      </option>\n\n      <option value=\"completed\">\n        Completed\n      </option>\n\n      <option value=\"active\">\n        Active\n      </option>\n    </select>\n\n    <input\n      type=\"text\"\n      name=\"title\"\n      onChange={(event) => {\n        setTitle(event.target.value);\n      }}\n    />\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classNames({\n              TodoList__item: true,\n              'TodoList__item--unchecked': !todo.completed,\n              'TodoList__item--checked': todo.completed,\n            })}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                readOnly\n                checked={todo.completed}\n                onChange={() => (\n                  changeStatus(todo.id)\n                )}\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"button TodoList__user-button\"\n              type=\"button\"\n              onClick={() => (\n                setUserId(todo.userId)\n              )}\n            >\n              User&nbsp;\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  setUserId: PropTypes.func.isRequired,\n  setTitle: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: '',\n  }\n\n  componentDidMount() {\n    const { getUser, userId } = this.props;\n\n    getUser(userId)\n      .then(user => this.setState({ user }));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { getUser, userId } = this.props;\n\n    if (prevProps.userId === userId) {\n      return;\n    }\n\n    getUser(userId)\n      .then(user => ((user !== null)\n        ? this.setState({ user })\n        : this.setState({\n          user: {\n            name: 'No name',\n            email: 'No email',\n            phone: 'No phone',\n          },\n        })));\n  }\n\n  render() {\n    const { clearUser, userId } = this.props;\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${userId}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name || 'No name'}</h3>\n        <p className=\"CurrentUser__email\">{user.email || 'No email'}</p>\n        <p className=\"CurrentUser__phone\">{user.phone || 'No phone'}</p>\n\n        <button\n          type=\"button\"\n          onClick={() => clearUser()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  getUser: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","const TODOS_API = `https://mate-api.herokuapp.com`;\n\nexport const getTodos = () => (\n  fetch(`${TODOS_API}/todos/`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n\nexport const getUser = userId => (\n  fetch(`${TODOS_API}/users/${userId}/`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUser } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    title: '',\n    status: 'All',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({\n        todos: todos.filter(todo => todo.title && todo.userId),\n      }));\n  }\n\n  setUserId = (id) => {\n    this.setState({ selectedUserId: id });\n  }\n\n  setTitle = (title) => {\n    this.setState({ title });\n  }\n\n  setStatus = (status) => {\n    this.setState({ status });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: '',\n    });\n  }\n\n  changeStatus = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return { ...todo };\n      }),\n    }));\n  }\n\n  render() {\n    const { todos, selectedUserId, title, status } = this.state;\n\n    const todosByTitle = todos.filter(todo => todo.title.includes(title));\n\n    let visibleTodos;\n\n    switch (status) {\n      case 'completed':\n        visibleTodos = todosByTitle.filter(todo => todo.completed);\n        break;\n\n      case 'active':\n        visibleTodos = todosByTitle.filter(todo => !todo.completed);\n        break;\n      default:\n        visibleTodos = todosByTitle;\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={visibleTodos}\n            setUserId={this.setUserId}\n            setTitle={this.setTitle}\n            setStatus={this.setStatus}\n            changeStatus={this.changeStatus}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                getUser={getUser}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}